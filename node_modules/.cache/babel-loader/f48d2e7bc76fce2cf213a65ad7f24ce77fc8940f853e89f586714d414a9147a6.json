{"ast":null,"code":"var _jsxFileName = \"/home/kamau/Downloads/my projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  _s();\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  const contactNames = useMemo(() => {\n    return contacts.map(contact => contact.name);\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"  Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        \"id-\": \"title\",\n        value: title,\n        onChange: setTitle,\n        placeholder: \"enter your name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time\",\n        children: \"  Time: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"time\",\n        value: time,\n        onChange: setTime,\n        type: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \" Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        value: date,\n        onChange: setDate,\n        type: \"date\",\n        min: getTodayString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contact\",\n        children: \" Contact: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n        id: \"contact\",\n        value: contact,\n        contacts: contactNames,\n        onChange: setContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: handleSubmit,\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(AppointmentForm, \"9tur8ZuM/Pgiy8Lm5dK4dfxE0e4=\");\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useMemo","ContactPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","_s","contacts","title","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","contactNames","map","name","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","type","id","min","_c","$RefreshReg$"],"sources":["/home/kamau/Downloads/my projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) =>{\r\n\r\n  const contactNames= useMemo(() =>  { return contacts.map((contact) => contact.name); \r\n   }, [contacts]);\r\n    \r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}  > \r\n\r\n    <label htmlFor=\"title\" >  Title: </label>\r\n    <input id-=\"title\" value={title} onChange={setTitle} placeholder=\"enter your name\"  type=\"text\" />\r\n\r\n    <label htmlFor=\"time\" >  Time: </label>\r\n    <input id=\"time\" value={time} onChange={setTime} type=\"time\" />\r\n\r\n    <label htmlFor=\"date\"  > Date: </label>\r\n    <input id=\"date\" value={date} onChange={setDate} type=\"date\" min={getTodayString()} />\r\n\r\n    <label htmlFor=\"contact\" > Contact: </label>\r\n    <ContactPicker id=\"contact\" value={contact} contacts={contactNames} onChange={setContact}  />\r\n    \r\n\r\n    <button type=\"submit\" onSubmit={handleSubmit}> Submit </button>\r\n    </form>\r\n    \r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}